<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>forensics on Nikola's Blog</title><link>https://knez.github.io/tags/forensics/</link><description>Recent content in forensics on Nikola's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 16 Nov 2021 22:03:56 +0200</lastBuildDate><atom:link href="https://knez.github.io/tags/forensics/index.xml" rel="self" type="application/rss+xml"/><item><title>Reversing Avast Quarantine</title><link>https://knez.github.io/posts/reversing-avast-quarantine/</link><pubDate>Tue, 16 Nov 2021 22:03:56 +0200</pubDate><guid>https://knez.github.io/posts/reversing-avast-quarantine/</guid><description>Intro ðŸ”—In this blog post, I will attempt to describe the Avast Antivirus quarantine file format. We&amp;rsquo;ll see where the files are stored and how they can be retrieved.
Throughout the process, I will use two files for demonstration purposes. A simple eicar.com and a meterpreter.exe, both put into quarantine.
Part 0 - The overall structure ðŸ”—Avast stores all of its quarantine data inside the folder C:\ProgramData\Avast Software\Avast\chest
Here&amp;rsquo;s an example of the folder&amp;rsquo;s content structure</description></item><item><title>How to Extract Quarantine Files from Windows Defender</title><link>https://knez.github.io/posts/how-to-extract-quarantine-files-from-windows-defender/</link><pubDate>Thu, 13 May 2021 21:04:56 +0200</pubDate><guid>https://knez.github.io/posts/how-to-extract-quarantine-files-from-windows-defender/</guid><description>During a forensic investigation, it can often be useful to examine the contents of a Windows Defender quarantine. It is surprising just how many interesting artifacts might reside there, ready to be analyzed.
However, we don&amp;rsquo;t want to live-boot the image and then manually extract each and every file. Ideally, we would like to automate this process as much as possible, and extract the data offline from a mounted image.</description></item><item><title>picoCTF 2021: Forensics</title><link>https://knez.github.io/posts/picoctf-2021-forensics/</link><pubDate>Tue, 30 Mar 2021 22:30:08 +0200</pubDate><guid>https://knez.github.io/posts/picoctf-2021-forensics/</guid><description>Information ðŸ”—Files can always be changed in a secret way. Can you find the flag? cat.jpg
Solution
We can inspect the image metadata using the exiftool
$ exiftool cat.jpg ... Copyright Notice : PicoCTF Application Record Version : 4 XMP Toolkit : Image::ExifTool 10.80 License : cGljb0NURnt0aGVfbTN0YWRhdGFfMXNfbW9kaWZpZWR9 Rights : PicoCTF Image Width : 2560 Image Height : 1598 The License string appears to be base64 encoded.
$ echo cGljb0NURnt0aGVfbTN0YWRhdGFfMXNfbW9kaWZpZWR9 | base64 -d Flag: picoCTF{the_m3tadata_1s_modified}</description></item></channel></rss>